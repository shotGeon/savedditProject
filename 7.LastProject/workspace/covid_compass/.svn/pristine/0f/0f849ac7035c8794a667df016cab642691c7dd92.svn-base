package com.spring.compass.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.spring.compass.command.InspListVO;
import com.spring.compass.command.InspPstiListSearchCommand;
import com.spring.compass.command.PageMaker;
import com.spring.compass.dao.InspDAO;
import com.spring.compass.vo.InspVO;

public class InspServiceImpl implements InspService{

	private InspDAO inspDAO = null;

	public void setInspDAO(InspDAO inspDAO) {
		this.inspDAO = inspDAO;
	}

	@Override
	public InspVO getInspByInstNo(String instNo) throws Exception {
		InspVO insp = inspDAO.selectInspByInstNo(instNo);
		return insp;
	}

	@Override
	public String getInspCityNo(String city) throws Exception {
		String cityNo = inspDAO.selectInspCityNo(city);
		return cityNo;
	}

	@Override
	public String getInspSeqNo() throws Exception {
		String inspSeqNo = inspDAO.selectInspNextval();
		return inspSeqNo;
	}

	@Override
	public String getInstSeqNo() throws Exception {
		String instSeqNo = inspDAO.selectInstNextval();
		return instSeqNo;
	}

	@Override
	public int registInsp(InspVO insp) throws Exception {
		int result = inspDAO.insertInsp(insp);
		return result;
	}

	@Override
	public int registInst(InspVO insp) throws Exception {
		System.out.println("registInst before");
		System.out.println(insp);
		int result = inspDAO.insertInst(insp);
		System.out.println("registInst after");
		return result;
	}

	@Override
	public Map<String, Object> getInspListPage(InspPstiListSearchCommand cri) throws Exception {
		
		Map<String, Object> dataMap = new HashMap<String, Object>();
		PageMaker pageMaker = null;
		
		pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		
		int totalCount = inspDAO.selectInspListCount(cri);
		
		pageMaker.setTotalCount(totalCount);
		
		List<InspListVO> inspList = inspDAO.selectInspList(cri);
		
		dataMap.put("inspList", inspList);
		dataMap.put("pageMaker", pageMaker);
		
		return dataMap;
	}

	@Override
	public String getResponsibleAgency(String responsible) throws Exception {
		String responsi = inspDAO.selectResponsibleAgency(responsible);
		return responsi;
	}

	@Override
	public InspListVO getPstiDetail(String pstiNo) throws Exception {
		InspListVO psti = inspDAO.selectPstiDetail(pstiNo);
		
		String jCode = psti.getJobCode();
		String vCode = psti.getVacCode();
		
		String job = inspDAO.selectJobByCode(jCode);
		String vac = inspDAO.selectVacByCode(vCode);
		
		psti.setJob(job);
		psti.setVac(vac);
		return psti;
	}
	


}
