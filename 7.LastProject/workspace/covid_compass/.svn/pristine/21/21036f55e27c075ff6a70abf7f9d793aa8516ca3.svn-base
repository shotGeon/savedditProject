package com.spring.compass.scheduler;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.spring.compass.service.HsptService;
import com.spring.compass.vo.HsptStatsVO;
import com.spring.compass.vo.InptntVO;
import com.spring.compass.vo.InptntstatsVO;
import com.spring.compass.vo.InspStatsVO;

public class HsptStatisticsUpdateScheduler {
	
	private HsptService hsptService;
	
	private String saveDgnssPath ="c:\\hsptStatisticsDgnss\\hsptDgnss";
	private String saveDgnssFileName ="hsptDgnssStatistics.log.csv";
	private String saveReqSckbdPath ="c:\\hsptStatisticsReqSckbd\\hsptReqSckbd";
	private String saveReqSckbdFileName="hsptReqSckbdStatistics.log.csv";
	private String saveInptntPath="c:\\hsptStatisticsInptnt\\hsptInptnt";
	private String saveInptntFileName="hsptInptntStatistics.log.csv";
	private String saveGoLtctPath="c:\\hsptStatisticsGoltct\\hsptGoltct";
	private String saveGoLtctFileName="hsptGoltctStatistics.log.csv";
	private String saveGoSelfPath ="c:\\hsptStatisticsGoSelf\\hsptGoself";
	private String saveGoSelfFileName="hsptGoSelfStatistics.log.csv";
	
	
	public void setHsptService(HsptService hsptService) {
		this.hsptService = hsptService;
	}
	
	public void setSaveDgnssPath(String saveDgnssPath) {
		this.saveDgnssPath = saveDgnssPath;
	}

	public void setSaveDgnssFileName(String saveDgnssFileName) {
		this.saveDgnssFileName = saveDgnssFileName;
	}
	
	public void setSaveReqSckbdPath(String saveReqSckbdPath) {
		this.saveReqSckbdPath = saveReqSckbdPath;
	}

	public void setSaveReqSckbdFileName(String saveReqSckbdFileName) {
		this.saveReqSckbdFileName = saveReqSckbdFileName;
	}
	

	public void setSaveInptntPath(String saveInptntPath) {
		this.saveInptntPath = saveInptntPath;
	}

	public void setSaveInptntFileName(String saveInptntFileName) {
		this.saveInptntFileName = saveInptntFileName;
	}
	
	
	public void setSaveGoLtctPath(String saveGoLtctPath) {
		this.saveGoLtctPath = saveGoLtctPath;
	}

	public void setSaveGoLtctFileName(String saveGoLtctFileName) {
		this.saveGoLtctFileName = saveGoLtctFileName;
	}
	
	
	
	public void setSaveGoSelfPath(String saveGoSelfPath) {
		this.saveGoSelfPath = saveGoSelfPath;
	}

	public void setSaveGoSelfFileName(String saveGoSelfFileName) {
		this.saveGoSelfFileName = saveGoSelfFileName;
	}
	
	
	



	public void updateHsptStatistics() throws Exception{
		String  filePath = saveDgnssPath +File.separator +saveDgnssFileName;
		
		File file = new File(filePath);
		
		BufferedReader in = new BufferedReader(new FileReader(file));
		String line="";
		while((line=in.readLine())!=null) {
			HsptStatsVO hsptstats = new HsptStatsVO();
			int num = line.indexOf("]");
			String trans = line.substring(num+1, line.length());
			String[] store = trans.split(",");
			hsptstats.setHsptNo(store[0]);
			String dateStr = store[1];
			hsptstats.setStatsYmd(dateStr);
			String hsptStatsNo = hsptService.getHsptStatusNo(hsptstats);
			hsptstats.setHsptStatsNo(hsptStatsNo);
			System.out.println("hsptstatsNo"+hsptStatsNo);
			int dgnssCnt = getSameHsptNoCnt(saveDgnssPath, saveDgnssFileName, store[0], store[1]);
			
			hsptstats.setDgnssCnt(dgnssCnt);
			
			int reqSckbdCnt = getSameHsptNoCnt(saveReqSckbdPath, saveReqSckbdFileName, store[0], store[1]);
			
			hsptstats.setReqSckbdCnt(reqSckbdCnt);
			
			int inptntCnt = getSameHsptNoCnt(saveInptntPath, saveInptntFileName, store[0], store[1]);
			
			hsptstats.setInptntCnt(inptntCnt);
			
			int goLtctCnt = getSameHsptNoCnt(saveGoLtctPath, saveGoLtctFileName, store[0], store[1]);
			
			hsptstats.setGoLtctCnt(goLtctCnt);
			
			int goSlfCnt = getSameHsptNoCnt(saveGoSelfPath, saveGoSelfFileName, store[0], store[1]);
			
			hsptstats.setGoSlfCnt(goSlfCnt);
			
			InptntstatsVO inptnt = new InptntstatsVO();
			inptnt.setHsptNo(store[0]);
			inptnt.setOutYmd(dateStr);
			inptnt.setInYmd(dateStr);
			int outCnt = hsptService.getOutCnt(inptnt);
			hsptstats.setOutCnt(outCnt);
			
			int deathCnt = hsptService.getDeathCnt(inptnt);
			hsptstats.setDeathCnt(deathCnt);
			
			int rlsedCnt = outCnt;
			hsptstats.setRlsedCnt(rlsedCnt);
			
			//전체 입원환자수
			int allInptntCnt = hsptService.getAllInptntCnt(inptnt.getHsptNo());
			hsptstats.setCurInptntCnt(allInptntCnt);
			
			int rmndSckbdCnt = hsptService.getRmndSckbdCnt(inptnt.getHsptNo());
			hsptstats.setRmndSckbdCnt(rmndSckbdCnt);
			
			int sckbdCnt = hsptService.getSckbdCnt(inptnt.getHsptNo());
			hsptstats.setSckbdCnt(sckbdCnt);
			
			hsptService.modifyHsptStats(hsptstats);
		}
		
		
		
	}
	
		private int getSameHsptNoCnt(String savePath, String fileName, String hsptNo, String dateStr)  throws IOException{
		int count =0;
			
		String  filePath = savePath +File.separator +fileName;
		
		File file = new File(filePath);
		
		BufferedReader in = new BufferedReader(new FileReader(file));
		String line="";
		
		while((line=in.readLine())!=null) {
			int num = line.indexOf("]");
			String trans = line.substring(num+1, line.length());
			String[] store = trans.split(",");
			String chkhsptNo = store[0];
			String chkdateStr = store[1];
			
			if(hsptNo.equals(chkhsptNo)&&dateStr.equals(chkdateStr)) {
				count++;
			}
			
		}
		
		return count;
	}
	
	
	
}
