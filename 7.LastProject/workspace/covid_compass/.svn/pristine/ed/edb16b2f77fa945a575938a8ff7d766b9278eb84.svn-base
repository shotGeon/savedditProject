package com.spring.compass.controller;

import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.spring.compass.command.InspListVO;
import com.spring.compass.command.InspPstiListSearchCommand;
import com.spring.compass.service.InspService;
import com.spring.compass.vo.InspVO;

@RestController
@RequestMapping("/rest-insp")
public class RestInspController {

	@Autowired
	private InspService inspService;
	
	//피검자 목록
	@RequestMapping("/insp-list")
	public ResponseEntity<Map<String, Object>> pstiList(@RequestParam(defaultValue="1")int page,
														@RequestParam(defaultValue="15")int perPageNum,
														@RequestParam(defaultValue="")String searchType,
														@RequestParam(defaultValue="")String keyword,
														HttpSession session) throws Exception{
		ResponseEntity<Map<String, Object>> entity = null;
		InspPstiListSearchCommand cri = new InspPstiListSearchCommand(page, perPageNum, searchType, keyword);
		InspVO insp = (InspVO)(session.getAttribute("loginInst"));
		cri.setInspNo(insp.getInspNo());
		try {
			Map<String, Object> dataMap = inspService.getInspListPage(cri);
			entity = new ResponseEntity<Map<String, Object>>(dataMap, HttpStatus.OK);
		}catch (Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<Map<String, Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return entity;
	}
	//검사요청 목록
	@RequestMapping("/insp-chckd-psti-list")
	public ResponseEntity<Map<String, Object>> inspChckdPstiList(@RequestParam(defaultValue="1")int page,
																	@RequestParam(defaultValue="15")int perPageNum,
																	@RequestParam(defaultValue="")String searchType,
																	@RequestParam(defaultValue="")String keyword,
																	HttpSession session) throws Exception{
		ResponseEntity<Map<String, Object>> entity = null;
		InspPstiListSearchCommand cri = new InspPstiListSearchCommand(page, perPageNum, searchType, keyword);
		InspVO insp = (InspVO)(session.getAttribute("loginInst"));
		cri.setInspNo(insp.getInspNo());
		try {
			Map<String, Object> dataMap = inspService.getInspChckdPstiListPage(cri);
			entity = new ResponseEntity<Map<String, Object>>(dataMap, HttpStatus.OK);
		}catch (Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<Map<String, Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return entity;
	}
	// 결과조회 목록
	@RequestMapping("/insp-psti-result-list")
	public ResponseEntity<Map<String, Object>> inspPstiResultList(@RequestParam(defaultValue="1")int page,
																	@RequestParam(defaultValue="15")int perPageNum,
																	@RequestParam(defaultValue="")String searchType,
																	@RequestParam(defaultValue="")String keyword,
																	HttpSession session) throws Exception{
		ResponseEntity<Map<String, Object>> entity = null;
		InspPstiListSearchCommand cri = new InspPstiListSearchCommand(page, perPageNum, searchType, keyword);
		InspVO insp = (InspVO)(session.getAttribute("loginInst"));
		cri.setInspNo(insp.getInspNo());
		try {
			Map<String, Object> dataMap = inspService.getPstiResultListPage(cri);
			entity = new ResponseEntity<Map<String, Object>>(dataMap, HttpStatus.OK);
		}catch (Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return entity;
		
	}
}
