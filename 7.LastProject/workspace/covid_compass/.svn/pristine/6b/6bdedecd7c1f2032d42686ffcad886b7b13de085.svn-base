package com.spring.compass.controller;

import java.sql.SQLException;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.spring.compass.service.MberService;
import com.spring.compass.service.MenuService;
import com.spring.compass.vo.MberVO;
import com.spring.compass.vo.MenuVO;

@Controller
public class CommonController {

	@Autowired
	private MberService mberService;
	
	public void setMberService(MberService mberService) {
		this.mberService = mberService;
	}


	@RequestMapping(value="common/main")
	public String main() {

		System.out.println("test!!!!!!!!!!!!!!!!!!!!!!!");

		String url = "common/main";

		return url;
	}


	/*
	 * 테스트용으로 설계됨
	 * iframe만 바꾸려면 추가로직 필요
	 * 그대로 쓰지 못하는 코드!!!!!!!!!!!
	 */
	@RequestMapping("/index")
	public String index(String murl, String mcode, Model model)
											throws SQLException{
		String url = "common/indexPage";

		/*
		List<MenuVO> menuList = menuService.getMainMenuList();
		MenuVO menu = menuService.getMenuByMcode(mCode);

		model.addAttribute("menuList", menuList);
		*/
		model.addAttribute("murl", murl);
		model.addAttribute("mcode", mcode);

		return url;
	}

	@RequestMapping("/guest/guest-main")
	public String guest() {
		String url ="guest/guest-main";
		return url;
	}
	@RequestMapping("/guest/question")
	public String question() {
		String url ="guest/question";
		return url;
	}
	@RequestMapping("/guest/chart")
	public String guestChart() {
		String url="guest/guest-chart";

		return url;
	}

	@RequestMapping("/index-test")
	public String indexTest(String murl, String mcode, Model model) {
		String url = "common/indexPage";

		model.addAttribute("mcode", mcode);
		model.addAttribute("murl", murl);

		return url;
	}


	@RequestMapping("/common/loginForm")
	public String loginForm(@RequestParam(defaultValue="")String error, HttpServletResponse response) {

		String url = "common/login";

		if(error.equals("1")) {
			response.setStatus(302);
		}
		return url;
	}

	@RequestMapping("/security/accessDenied")
	public void accessDenied() {}

	@RequestMapping("/common/find_IdForm")
	public void find_idForm() {}
	
	@RequestMapping(value="/common/findId", method=RequestMethod.POST)
	public String find_id(MberVO mber, Model model) {
		String url = "common/check-id";
		
		MberVO user = null;
		try {
			user = mberService.findInfo(mber);
			model.addAttribute("mberId", user.getMberId());
		} catch (Exception e) {
			e.printStackTrace();
			url = "common/notFoundInfo";
		}
		
		return url;
	}

	@RequestMapping("/common/find_PwdForm")
	public void find_pwdForm() {}

	@RequestMapping(value="/common/findPwd", method=RequestMethod.POST)
	public String find_pwd(MberVO mber, Model model) {
		String url="common/change-password";
		
		MberVO user = null;
		try {
			user = mberService.findInfo(mber);
			model.addAttribute("mberId", user.getMberId());
		} catch (Exception e) {
			e.printStackTrace();
			url = "common/notFoundInfo";
		}
		return url;
	}
	@RequestMapping("/common/check-id")
	public void check_id() {}

	@RequestMapping("/common/change-password")
	public void change_password() {}

	@RequestMapping("/common/mypage")
	public void mypage() {}

	@RequestMapping("/common/mypage-modifyform")
	public void mypage_modifyform() {}

	@RequestMapping("/common/set-session")
	public void setSession() {}

	@RequestMapping("/common/loading")
	public String loading() {
		return "common/loading";
	}

	@Autowired
	private MenuService menuService;

	@RequestMapping("/indexPage")
	public String index(@RequestParam(value="mCode", defaultValue = "M060000") String menuNo,
						HttpSession session,
			 			Model model)
			 					throws SQLException{
		String url = "common/indexPage";
		
		String tempMenuNo = menuNo.substring(0,3) + "0000";
		List<MenuVO> menuList = null;
		
		menuList = menuService.getSubMenuList(tempMenuNo);
		
		/*
		MberVO loginUser = (MberVO)session.getAttribute("loginUser");
		System.out.println(loginUser);
		String mberCode = loginUser.getMberCode();
		System.out.println(mberCode.charAt(2));
		String typeCheck = String.valueOf(mberCode.charAt(2));
		
		
		if(typeCheck.equals("0")) {
			System.out.println("직원회원");
			menuList = menuService.getEmpSubMenuList(tempMenuNo);
		}else if(typeCheck.equals("2")) {
			System.out.println("대표회원");
			menuList = menuService.getSubMenuList(tempMenuNo);
		}*/
		

		MenuVO menu = menuService.getMenu(menuNo);

		model.addAttribute("menuList", menuList);
		model.addAttribute("menu", menu);

		return url;
	}

	@RequestMapping("/submenu")
	public String submenu(@RequestParam(value="mCode", defaultValue = "M020000") String menuNo, Model model)
		throws SQLException{

		System.out.println("submenu with parent menuNo : " + menuNo);

		String url = "common/indexPage";

		List<MenuVO> menuList = menuService.getSubMenuList(menuNo);

		model.addAttribute("menuList", menuList);

		return url;
	}
}








