package com.spring.compass.controller;

import java.io.FileInputStream;

import javax.annotation.Resource;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.spring.compass.command.instRegistCommand;

@RequestMapping("/admin")
@Controller
public class AdminController {
	
	@Resource(name="instPath")
	private String instPath;
	
	@RequestMapping("main")
	public String adminMain() {
		String url="admin/main";
		return url;
	}

	@RequestMapping("/inst-list")
	public String insttList() {
		String url="admin/inst-list";

		return url;
	}
	@RequestMapping("/error-log-list")
	public String error() {
		String url="admin/errorlogPage";
		return url;
	}
	@RequestMapping("/access-log-list")
	public String access() {
		String url="admin/accesslogPage";
		return url;
	}

	@RequestMapping("/inst-registForm")
	public String insttRegistForm() {
		String url="admin/inst-registForm";

		return url;
	}
	@RequestMapping(value="/inst-selfRegist", method=RequestMethod.POST)
	public String selfInstRegist(instRegistCommand registCommand)throws Exception{
		String url="";
		System.out.println("기관 직접등록");
		String writer=registCommand.getWriter();
		String inst = registCommand.getInst();
		String instCall=registCommand.getInstCall();

		System.out.println("writer:"+writer);
		System.out.println("inst:"+inst);
		System.out.println("isntCall:"+instCall);

		return url;
	}
	
	@RequestMapping(value="/inst-fileRegist", method=RequestMethod.POST)
	public String insttRegist(instRegistCommand registCommand)throws Exception{
		String url="";
		String writer=registCommand.getWriter();
		String inst = registCommand.getInst();
		String fileName =registCommand.getFileName();

		System.out.println("writer:"+writer);
		System.out.println("inst:"+inst);
		System.out.println("fileName:"+fileName);
		
		String filePath = instPath+fileName;
		System.out.println("filePath:"+filePath);
		
		
		FileInputStream in = new FileInputStream(filePath);
		
		if(in !=null) {
			System.out.println("(기관등록)파일있음");
			XSSFWorkbook workbook = new XSSFWorkbook(in);
			
			int rowNo =0;
			int cellIndex=0;
			
			XSSFSheet sheet = workbook.getSheetAt(0);
			
			int rows = sheet.getPhysicalNumberOfRows();
			
			System.out.println("rows:"+rows);
			
			for(rowNo=0; rowNo<rows; rowNo++) {
				XSSFRow row = sheet.getRow(rowNo);
				
				if(row !=null) {
					int cells = row.getPhysicalNumberOfCells();
					
					for(cellIndex=0; cellIndex<cells; cellIndex++) {
						XSSFCell cell = row.getCell(cellIndex);
						
						String value ="";
						
						if(cell==null) {
							continue;
						}else {
							System.out.println(cell.getStringCellValue());
							System.out.println("============================");
						}
					}
				}
			}
			
		}
		in.close();
		
		return url;
	}




}
