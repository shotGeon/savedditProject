package com.spring.compass.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.compass.command.LtctIsoptntHighTempCardListVO;
import com.spring.compass.command.LtctSckbdCountAndStats;
import com.spring.compass.service.LtctService;
import com.spring.compass.vo.LtctVO;

@Controller
@RequestMapping("/ltct")
public class LtctController {

	@Autowired
	private LtctService ltctService;
	
	@RequestMapping("/main")
	public ModelAndView main(HttpSession session, ModelAndView mnv) {
		String url="ltct/main";
		LtctVO ltct = (LtctVO) session.getAttribute("loginInst");
		List<LtctIsoptntHighTempCardListVO> highTempCardList = null;
		try {
			highTempCardList = ltctService.getIsoptntHighTempCardList(ltct.getLtctNo());
			if(!highTempCardList.isEmpty()) {
				mnv.addObject("highTempCardList", highTempCardList);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="/isoptnt-list")
	public String isopntList() {
		String url="ltct/isoptnt-list";
		return url;
	}
	
	@RequestMapping(value="/isoptnt-detail")
	public String isopntDetail() {
		String url="ltct/isoptnt-detail";
		return url;
	}
	
	@RequestMapping(value="/res-smple-list")
	public String resSmpleList() {
		String url="ltct/res-smple-list";
		
		return url;
	}
	@RequestMapping(value="/req-isoptnt-list")
	public String reqIsoptntList() {
		String url="ltct/req-isoptnt-list";
		
		return url;
	}
	
	@RequestMapping(value="/statistics")
	public String ltctStatistics() {
		String url="ltct/statistics";
		
		return url;
	}
	@RequestMapping(value="/notice-list")
	public String noticeList() {
		String url="ltct/notice-list";
		
		return url;
	}
	@RequestMapping(value="/notice-detail")
	public String noticeDetail() {
		String url="ltct/notice-detail";
		
		return url;
	}
	@RequestMapping(value="/notice-modifyForm")
	public String noticeModifyForm() {
		String url="ltct/notice-modifyForm";
		
		return url;
	}
	@RequestMapping(value="/notice-registForm")
	public String noticeRegistForm() {
		String url="ltct/notice-registForm";
		
		return url;
	}
	@RequestMapping(value="/emp-manage-list")
	public String empList() {
		String url="ltct/emp-manage-list";
		
		return url;
	}
	
	@RequestMapping(value="/emp-manage-registform")
	public String empRegistForm() {
		String url="ltct/emp-manage-registform";
		
		return url;
	}
	@RequestMapping(value="/mypage")
	public String mypage() {
		String url="ltct/mypage";
		
		return url;
	}
	@RequestMapping(value="/mypage-modifyform")
	public String mypageModifyForm() {
		String url="ltct/mypage-modifyform";
		
		return url;
	}
	@RequestMapping(value="/change-passwordForm")
	public String chanePasswordForm() {
		String url="ltct/change-passwordForm";
		
		return url;
	}
	@RequestMapping(value="/cnfrm-detail-dgnss-regist")
	public String dgnssRegist() {
		String url="ltct/cnfrm-detail-dgnss-regist";
		return url;
	}
	@RequestMapping(value="/sckbd-modify")
	public ModelAndView modify(ModelAndView mnv, HttpSession session) {
		String url = "ltct/sckbdcnt-modify";
		LtctVO ltct = (LtctVO) session.getAttribute("loginInst");
		String ltctNo = ltct.getLtctNo();
		try {
			LtctSckbdCountAndStats sckbdCountAndStats = ltctService.getSckbdCountAndStats(ltctNo);
			mnv.addObject("sckbdCountAndStats", sckbdCountAndStats);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="/ltctPbhtList")
	public ModelAndView ltctPbhtList(String manageNo, ModelAndView mnv) throws Exception{
		String url = "ltct/ltctPbhtList";
		
		// manageNo 일단 파라미터로 전달됨.
		
		mnv.addObject("manageNo", manageNo);
		mnv.setViewName(url);
		return mnv;
	}
	
}
