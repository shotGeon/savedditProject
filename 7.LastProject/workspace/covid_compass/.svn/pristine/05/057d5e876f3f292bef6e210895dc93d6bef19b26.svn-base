package com.spring.compass.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.spring.compass.service.PbhtServiceImplLMY;
import com.spring.compass.service.PbhtServiceLMY;
import com.spring.compass.util.MakeStatisticsLogByPbht;
import com.spring.compass.vo.PbhtVO;

@Controller
@RequestMapping("/pbhlth")
public class PbhlthController {
	
private static final Logger LOGGER = LoggerFactory.getLogger(RestHsptController.class);
	
	@Autowired
	private PbhtServiceLMY pbhtServiceLMY;
	
	
	@RequestMapping(value="main")
	public void main() {}
	
	@RequestMapping(value="smple-list")
	public String smpleList() {
		String url ="pbhlth/smple-list";
		
		return url;
	}
	@RequestMapping(value="smple-detail")
	public String smpleDetail() {
		String url ="pbhlth/smple-detail";
		
		return url;
	}
	
	@RequestMapping(value="notice-list")
	public String noticeList() {
		String url = "pbhlth/notice-list";
		
		return url;
	}
	
	@RequestMapping(value="mypage")
	public String myPage() {
		String url = "pbhlth/mypage";
		
		return url;
	}
	
	@RequestMapping(value="emp-manage-list")
	public String empManageList() {
		String url = "pbhlth/emp-manage-list";
		
		return url;
	}
	
	@RequestMapping(value="cnfrm-list")
	public String crfrmList() {
		String url = "pbhlth/cnfrm-list";
		
		return url;
	}
	@RequestMapping(value="slfptnt-list")
	public String slfptntList() {
		String url = "pbhlth/slfptnt-list";
		
		return url;
	}
	@RequestMapping(value="statistics")
	public String statistics() {
		String url ="pbhlth/statistics";
		
		return url;
	}
	
	@RequestMapping(value="cnfrm-detail-dgnss-regist")
	public ModelAndView cnfrmDetailDgnssRegist(ModelAndView mnv, String manageNo, String pstiNm, HttpSession session) {
		String url = "pbhlth/cnfrm-detail-dgnss-regist";
		PbhtVO pbht = (PbhtVO)(session.getAttribute("loginInst"));
		Map<String, Object> dataMap = new HashMap<String, Object>();
		
		dataMap.put("pstiNm", pstiNm);
		dataMap.put("pbhtNo", pbht.getPbhtNo());
		dataMap.put("manageNo", manageNo);
		mnv.addAllObjects(dataMap);
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="cnfrm-dgnss-registgo")
	public ModelAndView cnfrmDgnssRegistgo(ModelAndView mnv, String manageNo, String hsptNo, HttpSession session)throws Exception {
		String url = "pbhlth/dgnss-rsgist-success";
		
		PbhtVO pbht = (PbhtVO)(session.getAttribute("loginInst"));
		
		Map<String, Object> reqData = new HashMap<String, Object>();
		
		reqData.put("manageNo", manageNo);
		reqData.put("hsptNo", hsptNo);
		reqData.put("pbhtNo", pbht.getPbhtNo());
		
		int result = pbhtServiceLMY.setHsptDgnssRegist(reqData);
		
		System.out.println("성공이냐 ~?~?~?~??~" + result);
		
		mnv.addObject(result);
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="cnfrm-detail-dgnss-detail")
	public String cnfrmDetailDgnssDetail() {
		String url = "pbhlth/cnfrm-detail-dgnss-detail";
		
		return url;
	}
	
	@RequestMapping("res-smple-list")
	public void resSmpleList() {}
	
	@Autowired
	private MakeStatisticsLogByPbht makeStatisticsByPbht;
	
	@RequestMapping("smpl-confirmed")
	public ModelAndView smplConfirmed(ModelAndView mnv, String smplNo, String manageNo, String sttusCode, HttpSession session)throws Exception {
		String url = "pbhlth/smple-list";
		PbhtVO pbht = (PbhtVO)(session.getAttribute("loginInst"));
		Map<String, Object> data = new HashMap<String, Object>();
		
		data.put("smplNo", smplNo);
		data.put("manageNo", manageNo);
		data.put("sttusCode", sttusCode);
		data.put("pbhtNo", pbht.getPbhtNo());
		
		int result = pbhtServiceLMY.setCheckSmplRegist(data);
		
		makeStatisticsByPbht.makePbhtStatisticsSmpleCnt(pbht.getPbhtNo());
		if(sttusCode.equals("A102")) {
			makeStatisticsByPbht.makePbhtStatisticsPstvGender(manageNo, pbht.getPbhtNo());
			makeStatisticsByPbht.makePbhtStatisticsPstvAge(manageNo, pbht.getPbhtNo());
		}
		if(sttusCode.equals("A103")) {
			makeStatisticsByPbht.makePbhtStatisticsNgtvGender(manageNo, pbht.getPbhtNo());
			makeStatisticsByPbht.makePbhtStatisticsNgtvAge(manageNo, pbht.getPbhtNo());
		}
		
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping("smpls-confirmed")
	public ModelAndView smplsConfirmed(ModelAndView mnv, String smplNo, String manageNo, String sttusCode, HttpSession session)throws Exception {
		String url = "pbhlth/smple-list";
		PbhtVO pbht = (PbhtVO)(session.getAttribute("loginInst"));
		
		String[] smpls = smplNo.split(",");
		String[] manages = manageNo.split(",");
		
		
		for(int i = 0; i < smpls.length; i++) {
			
			Map<String, Object> data = new HashMap<String, Object>();
			
			data.put("smplNo", smpls[i]);
			data.put("manageNo", manages[i]);
			data.put("sttusCode", sttusCode);
			data.put("pbhtNo", pbht.getPbhtNo());
			
			int result = pbhtServiceLMY.setCheckSmplRegist(data);
			makeStatisticsByPbht.makePbhtStatisticsSmpleCnt(pbht.getPbhtNo());
			if(sttusCode.equals("A102")) {
				makeStatisticsByPbht.makePbhtStatisticsPstvGender(manages[i], pbht.getPbhtNo());
				makeStatisticsByPbht.makePbhtStatisticsPstvAge(manages[i], pbht.getPbhtNo());
			}
			if(sttusCode.equals("A103")) {
				makeStatisticsByPbht.makePbhtStatisticsNgtvGender(manages[i], pbht.getPbhtNo());
				makeStatisticsByPbht.makePbhtStatisticsNgtvAge(manages[i], pbht.getPbhtNo());
			}
		}
		
		
		
		mnv.setViewName(url);
		
		return mnv;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
