/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-01-14 12:29:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hspt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sckbdcnt_002dmodify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1639443128000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/covid_compass/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<head></head>\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"card card-success\">\r\n");
      out.write("\t\t<div class=\"register-card-body\"> \r\n");
      out.write("\t\t<div class=\"card-header\" style=\"background-color: #5b6f90; color:white;\">\r\n");
      out.write("\t\t\t<h3 class=\"card-title\">병상 등록</h3>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"card-body \">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<input class=\"form-control form-control-lg col-md-4\" type=\"number\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"kit input\" />\r\n");
      out.write("\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\tclass=\"btn btn-block btn-primary btn-sm col-md-1\"\r\n");
      out.write("\t\t\t\t\tstyle=\"height: 48px; background: #5b6f90; color: #ffffff; border-color: #5b6f90;\">등록</button>\r\n");
      out.write("\t\t\t\t<i class=\"fas fa-procedures fa-3x\"\r\n");
      out.write("\t\t\t\t\tstyle=\"margin-left: 130px; color: #c2c7d0;\"></i> <span\r\n");
      out.write("\t\t\t\t\tclass=\"col-md-2\" style=\"font-size: 36px; color: #6c757d;\">&nbsp;&nbsp;10석</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"card-header\" style=\"background-color: #5b6f90; color:white;\">\r\n");
      out.write("\t\t\t<h3 class=\"card-title\">사용현황</h3>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t<div class=\"table-responsive\">\r\n");
      out.write("                <table class=\"table table-bordered\">\r\n");
      out.write("                  <thead>\r\n");
      out.write("                    <tr style=\"text-align: center; font-weight: bold; background-color:#f5fafc \">\r\n");
      out.write("                      <th >잔여병상수</th>\r\n");
      out.write("                      <th >입원환자수</th>\r\n");
      out.write("                      <th >총 병상수</th>\r\n");
      out.write("                      <th >가동률</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </thead>\r\n");
      out.write("                  <tbody>\r\n");
      out.write("                    <tr style=\"text-align: center\">\r\n");
      out.write("                      <td>15</td>\r\n");
      out.write("                      <td>105</td>\r\n");
      out.write("                      <td>120</td>\r\n");
      out.write("                      <td><span class=\"badge badge-warning\">85%</span></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("                <table class=\"table table-bordered\">\r\n");
      out.write("                  <thead>\r\n");
      out.write("                    <tr style=\"text-align: center; font-weight: bold; background-color:#f5fafc \">\r\n");
      out.write("                      <th>입원수</th>\r\n");
      out.write("                      <th>퇴원수(완치)</th>\r\n");
      out.write("                      <th>퇴원수(이원)</th>\r\n");
      out.write("                      <th>퇴원수(사망)</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </thead>\r\n");
      out.write("                  <tbody>\r\n");
      out.write("                    <tr style=\"text-align: center\">\r\n");
      out.write("                      <td>50</td>\r\n");
      out.write("                      <td>100</td>\r\n");
      out.write("                      <td>15</td>\r\n");
      out.write("                      <td>3</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("<!-- \t\t\t\t<table class=\"table m-0\" style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr role=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<th tabindex=\"0\" aria-controls=\"example2\" rowspan=\"1\" colspan=\"1\" class=\"col-md-4\"\r\n");
      out.write("\t\t\t\t\t\t\t\taria-label=\"Browser: activate to sort column ascending\">병상 수</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th tabindex=\"0\" aria-controls=\"example2\" rowspan=\"1\" colspan=\"1\" class=\"col-md-4\"\r\n");
      out.write("\t\t\t\t\t\t\t\taria-label=\"Browser: activate to sort column ascending\">이용중인 병상 수</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th tabindex=\"0\" aria-controls=\"example2\" rowspan=\"1\" colspan=\"1\" class=\"col-md-4\"\r\n");
      out.write("\t\t\t\t\t\t\t\taria-label=\"Platform(s): activate to sort column ascending\">사용률</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>100</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>90</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>90%</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write(" -->\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
