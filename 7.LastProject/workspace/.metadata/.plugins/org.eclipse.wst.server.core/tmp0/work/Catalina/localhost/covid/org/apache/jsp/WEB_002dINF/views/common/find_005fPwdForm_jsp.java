/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-22 07:35:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class find_005fPwdForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<head></head>\r\n");
      out.write("\r\n");
      out.write("<title>비밀번호 찾기</title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"card card-info\">\r\n");
      out.write("          <div class=\"card-header\" style=\"background: #1a4f72\">\r\n");
      out.write("            <h3 class=\"card-title\" >비밀번호 찾기</h3>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- /.card-header -->\r\n");
      out.write("          <!-- form start -->\r\n");
      out.write("          <form class=\"form-horizontal\" method=\"post\" role=\"form\" action=\"");
      out.print(request.getContextPath());
      out.write("/common/findPwd\" style=\"margin-top: 5px;\">\r\n");
      out.write("            <div class=\"card-body pb-0 pt-0\">\r\n");
      out.write("              <div class=\"form-group row \">\r\n");
      out.write("                <label for=\"mberId\" class=\"col-sm-3 col-form-label\">아이디</label>\r\n");
      out.write("                <div class=\"col-sm-9\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control\" id=\"mberId\" name=\"mberId\" maxlength=\"25\" placeholder=\"Enter id\">\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"form-group row\">\r\n");
      out.write("                <label for=\"mberNm\" class=\"col-sm-3 col-form-label pt-0\">이름</label>\r\n");
      out.write("                <div class=\"col-sm-9\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control\" id=\"mberNm\" name=\"mberNm\" maxlength=\"25\" placeholder=\"Enter name\">\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"form-group row\">\r\n");
      out.write("                <label for=\"mberBir\" class=\"col-sm-3 col-form-label pt-0\">생년월일</label>\r\n");
      out.write("                <div class=\"col-sm-9\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control\" id=\"mberBir\" name=\"mberBir\" onkeyup=\"birth_keyup(this)\" maxlength=\"10\" placeholder=\"2022-01-01\">\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"form-group row\">\r\n");
      out.write("                <label for=\"mberTelno\" class=\"col-sm-3 col-form-label pt-0\">연락처</label>\r\n");
      out.write("                <div class=\"col-sm-9\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control col-sm-8\" id=\"mberTelno\" name=\"mberTelno\" maxlength=\"13\" oninput=\"autoHyphen(this)\" placeholder=\"010-1234-5678\" style=\"display: inline;\">\r\n");
      out.write("                  <button type=\"button\" id=\"pleaseNumber\" class=\"btn btn-info col-sm-3\" style=\"background-color: #1a4f72; border-color: #1a4f72; display: inline;\">인증번호 전송</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"form-group row\" style=\"display: none;\" id=\"numberinput\">\r\n");
      out.write("                <label for=\"writenumber\" class=\"col-sm-3 col-form-label pt-0\">인증번호</label>\r\n");
      out.write("                <div class=\"col-sm-9\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control col-sm-8\" id=\"writenumber\" name=\"writenumber\" maxlength=\"6\" style=\"display: inline;\">\r\n");
      out.write("                  <button type=\"button\" onclick=\"checknumber();\" class=\"btn btn-info col-sm-3\" style=\"background-color: #1a4f72; border-color: #1a4f72; display: inline;\">인증번호 확인</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.card-body -->\r\n");
      out.write("            <div class=\"card-footer\">\r\n");
      out.write("     <button type=\"button\" class=\"btn btn-info\" id=\"submitbutton\" style=\"background-color: #1a4f72; border-color: #1a4f72;\">확인</button>\r\n");
      out.write("     <button type=\"button\" id=\"close\" class=\"btn btn-default\" style=\"background-color: #1a4f72; border-color: #1a4f72; color: white;\">닫기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.card-footer -->\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("           <input type=\"hidden\" id=\"number\">\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("\t$('#close').on('click', function(){\r\n");
      out.write("\t\twindow.close();\r\n");
      out.write("\t})\r\n");
      out.write("\t//인증번호 전송 버튼 클릭\r\n");
      out.write("\t$('#pleaseNumber').on('click', function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tmberNm = document.getElementById('mberNm').value;\r\n");
      out.write("\t\tmberTelno = document.getElementById('mberTelno').value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(mberId == null || mberId == ''){\r\n");
      out.write("\t\t\talert(\"아이디를 입력해주세요.\")\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(mberNm == null || mberNm == ''){\r\n");
      out.write("\t\t\talert(\"이름을 입력해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(mberBir == null || mberBir ==''){\r\n");
      out.write("\t\t\talert(\"생년월일을 입력해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(mberTelno == null || mberTelno ==''){\r\n");
      out.write("\t\t\talert(\"연락처를 입력해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//mberBir Date로 캐스팅 해줘야함.\r\n");
      out.write("\t\tnumber = randomString();\r\n");
      out.write("\t\t$('#number').val(number);\r\n");
      out.write("\t\tconsole.log(number)\r\n");
      out.write("\t\tmberData = {\r\n");
      out.write("\t\t\t\"mberNm\" : mberNm,\r\n");
      out.write("\t\t\t\"mberTelno\" : mberTelno,\r\n");
      out.write("\t\t\t\"number\" : number\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t// SMS 문자보내기.\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: \"");
      out.print(request.getContextPath());
      out.write("/common/sms.do\",\r\n");
      out.write("\t\t\t\tdata : JSON.stringify(mberData),\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\tcontentType : \"application/json\",\r\n");
      out.write("\t\t\t\tsuccess: function(res){\r\n");
      out.write("\t\t\t\t\talert(\"인증번호를 발송했습니다.\");\r\n");
      out.write("\t\t\t\t\t$('#numberinput').css('display', 'block');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function(xhr){\r\n");
      out.write("\t\t\t\t\talert('해당정보에 일치하는 계정이 존재하지 않습니다.\\n올바른 정보를 입력해주세요.');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//랜덤 문자 생성\r\n");
      out.write("function randomString(){\r\n");
      out.write("\tconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n");
      out.write("\tconst stringLength = 6;\r\n");
      out.write("\tlet randomString = '';\r\n");
      out.write("\tfor(let i = 0; i < stringLength; i++){\r\n");
      out.write("\t\tconst rnum = Math.floor(Math.random() * chars.length)\r\n");
      out.write("\t\trandomString += chars.substring(rnum, rnum+1)\r\n");
      out.write("\t}\r\n");
      out.write("\treturn randomString\r\n");
      out.write("}\r\n");
      out.write("//인증 번호 랑 입력번호 비교해서 확인 버튼.\r\n");
      out.write("function checknumber(){\r\n");
      out.write("\tvar hidden = $('#number').val();\r\n");
      out.write("\t\r\n");
      out.write("\tvar write = $('#writenumber').val();\r\n");
      out.write("\t\r\n");
      out.write("\tif(hidden != write){\r\n");
      out.write("\t\talert(\"인증번호가 일치하지 않습니다.\\n다시 입력해주세요.\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\talert(\"인증되었습니다.\");\r\n");
      out.write("\t\r\n");
      out.write("\tvar form = $('form[role=\"form\"]');\t\r\n");
      out.write("\tform.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//생년월일 하이픈\r\n");
      out.write("function birth_keyup(obj){\r\n");
      out.write("    let birth_len = obj.value.length;\r\n");
      out.write("    if (event.keyCode==8){\r\n");
      out.write("        obj.value = obj.value.slice(0,birth_len)\r\n");
      out.write("        return 0;\r\n");
      out.write("    }else if(birth_len==4 || birth_len==7){\r\n");
      out.write("        obj.value += '-';\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("//전화번호 하이픈\r\n");
      out.write("const autoHyphen = (target) => {\r\n");
      out.write("\ttarget.value = target.value.replace(/[^0-9]/, '').replace(/^(\\d{2,3})(\\d{3,4})(\\d{4})$/,`$1-$2-$3`);\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
