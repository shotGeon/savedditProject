/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 02:16:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class indexPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<head>\r\n");
      out.write("<style>\r\n");
      out.write(".on-submenu{\r\n");
      out.write("\tborder-bottom : 3px solid black;\r\n");
      out.write("}\r\n");
      out.write(".bold{\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"content-wrapper\" style=\"background-color:#fff; height:auto; max-width: 1280px; margin: 0 auto; align-content: center;\">\r\n");
      out.write("\t \t<iframe id=\"the_iframe\" onload=\"calcHeight();\" \r\n");
      out.write("\t \tname=\"ifr\" src=\"");
      out.print(request.getContextPath() );
      out.write("/common/loading\" \r\n");
      out.write("\t \tframeborder=\"0\" scrolling=\"no\" \r\n");
      out.write("\t \tstyle=\"overflow-x:hidden; overflow:auto; width:100%; min-height:790px;\">\r\n");
      out.write("\t \t</iframe>\r\n");
      out.write(" \t</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function goPage(menuUrl, menuNo, isNotice, noticeNo){\r\n");
      out.write("\t\r\n");
      out.write("\t//alert(menuUrl);\r\n");
      out.write("\tdocument.querySelector('iframe[name=\"ifr\"]').src = menuUrl;\r\n");
      out.write("\t\r\n");
      out.write("\tvar submenuId = menuUrl.substring('");
      out.print( request.getContextPath().length());
      out.write("');\r\n");
      out.write("\t\r\n");
      out.write("\tvar lis = $('li.subMenu');\r\n");
      out.write("\t\r\n");
      out.write("\tlis.removeClass('on-submenu');\r\n");
      out.write("\t\r\n");
      out.write("\tvar target = document.getElementById(submenuId);\r\n");
      out.write("\t\r\n");
      out.write("\t$(target).addClass('on-submenu');\r\n");
      out.write("\t\r\n");
      out.write("\tvar spans = $('li.subMenu span');\r\n");
      out.write("\tspans.removeClass('bold');\r\n");
      out.write("\tvar spanTarget = $(target).find('span');\r\n");
      out.write("\tspanTarget.addClass('bold');\r\n");
      out.write("\t\r\n");
      out.write("\tif(typeof(history.pushState) == 'function'){\r\n");
      out.write("\t\tvar renewURL = location.href;\r\n");
      out.write("\t\trenewURL = renewURL.substring(0, renewURL.indexOf('?'));\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!isNotice){\r\n");
      out.write("\t\t\trenewURL += \"?mCode=\" + menuNo;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\trenewURL += \"?mCode=\" + menuNo + \"&noticeNo=\" + noticeNo;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\thistory.pushState(menuNo, null, renewURL);\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tlocation.hash = \"#\"+menuNo;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//<![CDATA[\r\n");
      out.write("function calcHeight(){\r\n");
      out.write(" //find the height of the internal page\r\n");
      out.write("\r\n");
      out.write(" var the_height=\r\n");
      out.write(" document.getElementById('the_iframe').contentWindow.\r\n");
      out.write(" document.body.scrollHeight;\r\n");
      out.write("\r\n");
      out.write(" //change the height of the iframe\r\n");
      out.write(" document.getElementById('the_iframe').height=the_height;\r\n");
      out.write("\r\n");
      out.write(" //document.getElementById('the_iframe').scrolling = \"no\";\r\n");
      out.write(" document.getElementById('the_iframe').style.overflow = \"hidden\";\r\n");
      out.write("}\r\n");
      out.write("//\r\n");
      out.write("\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("\t\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isNotice}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' =='false'){\r\n");
      out.write("\t\tgoPage('");
      out.print(request.getContextPath());
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menu.menuUrl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menu.menuNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tgoPage('");
      out.print(request.getContextPath());
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menu.menuUrl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("?noticeNo=' + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menu.menuNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isNotice}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${noticeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script> \t\r\n");
      out.write(" \t\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
