/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-22 07:37:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class qrPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1639443128000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/covid_compass/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<title>QR코드</title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("function confirmationClose(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar check = confirm(\"qr코드 발급을 종료하시겠습니까?\");\r\n");
      out.write("\t\r\n");
      out.write("\tif(check){\r\n");
      out.write("\t\twindow.close();\r\n");
      out.write("\t}\r\n");
      out.write("\telse{\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function generateQR(pstiNo){\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#qrBox\").empty();\r\n");
      out.write("\t \r\n");
      out.write("\tvar qrcode = new QRCode(document.getElementById(\"qrBox\"));\r\n");
      out.write("\tvar url = 'http://192.168.143.14");
      out.print(request.getContextPath());
      out.write("/common/qrInfo?pstiNo=' + pstiNo;\r\n");
      out.write("\tif(!pstiNo) url = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\tqrcode.makeCode(url);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("\tgenerateQR('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pstiNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction savePDF() {\r\n");
      out.write("\t\t\t//저장 영역 div id\r\n");
      out.write("\t\t\thtml2canvas($('#pdfArea')[0], {\r\n");
      out.write("\t\t\t\t//logging : true,\t\t// 디버그 목적 로그\r\n");
      out.write("\t\t\t\t//proxy: \"html2canvasproxy.php\",\r\n");
      out.write("\t\t\t\tallowTaint : true, // cross-origin allow \r\n");
      out.write("\t\t\t\tuseCORS : true, // CORS 사용한 서버로부터 이미지 로드할 것인지 여부\r\n");
      out.write("\t\t\t\tscale : 2\r\n");
      out.write("\t\t\t// 기본 96dpi에서 해상도를 두 배로 증가\r\n");
      out.write("\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\t\t.then(\r\n");
      out.write("\t\t\t\t\t\t\tfunction(canvas) {\r\n");
      out.write("\t\t\t\t\t\t\t\t// 캔버스를 이미지로 변환\r\n");
      out.write("\t\t\t\t\t\t\t\tvar imgData = canvas.toDataURL('image/png');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar imgWidth = 190; // 이미지 가로 길이(mm) / A4 기준 210mm\r\n");
      out.write("\t\t\t\t\t\t\t\tvar pageHeight = imgWidth * 1.414; // 출력 페이지 세로 길이 계산 A4 기준\r\n");
      out.write("\t\t\t\t\t\t\t\tvar imgHeight = canvas.height * imgWidth\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t/ canvas.width;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar heightLeft = imgHeight;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar margin = 10; // 출력 페이지 여백설정\r\n");
      out.write("\t\t\t\t\t\t\t\tvar doc = new jsPDF('p', 'mm');\r\n");
      out.write("\t\t\t\t\t\t\t\tvar position = 10;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t// 첫 페이지 출력\r\n");
      out.write("\t\t\t\t\t\t\t\tdoc.addImage(imgData, 'PNG', margin, position,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\timgWidth, imgHeight);\r\n");
      out.write("\t\t\t\t\t\t\t\theightLeft -= pageHeight;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t// 한 페이지 이상일 경우 루프 돌면서 출력\r\n");
      out.write("\t\t\t\t\t\t\t\twhile (heightLeft >= 20) { // 35\r\n");
      out.write("\t\t\t\t\t\t\t\t\tposition = heightLeft - imgHeight;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tposition = position - 20; // -25\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdoc.addPage();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdoc.addImage(imgData, 'PNG', margin,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tposition, imgWidth, imgHeight);\r\n");
      out.write("\t\t\t\t\t\t\t\t\theightLeft -= pageHeight;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t// 파일 저장\r\n");
      out.write("\t\t\t\t\t\t\t\tdoc.save('qrcode-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pstiNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".pdf');\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("<section>\r\n");
      out.write("\t<div class=\"row\" style=\"margin: 1px; height: 45px; align-content: space-around\">\r\n");
      out.write("\t\t\t<div style=\"width: 45%;\"></div>\r\n");
      out.write("\t\t\t<div class=\"check\" style=\"width: 25%;\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"savePDF();\"style=\"background-color: rgb(26, 79, 114); border-color: rgb(26, 79, 114);\" class=\"btn btn-block btn-primary\">qr인쇄</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"width: 2%;\"></div>\r\n");
      out.write("\t\t\t<div class=\"check\" style=\"width: 25%;\">\r\n");
      out.write("\t\t\t\t<button type=\"button\"  onclick=\"confirmationClose();\" class=\"btn btn-block btn-danger\">닫기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"pdfArea\">\r\n");
      out.write("\t\t<div style=\"border: 1px solid black; margin: 10px; margin-top: 0;\">\r\n");
      out.write("\t\t\t<div style=\"border: 2px double black; margin: 10px;\">\r\n");
      out.write("\t\t\t\t<div style=\"height: 80px;\"></div>\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-lg-3\"></div>\r\n");
      out.write("\t\t\t\t\t<div id=\"qrPrintId\" class=\"form-group col-lg-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\" style=\"margin: 0 auto; float: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-12 text-center\" style=\"justify-content: center; display: flex;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<form style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"pstiNo\" name=\"pstiNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pstiNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"qrBox\" class=\"brand-link d-flex\" style=\"height: 130px; width: 130px; background-size: cover; background-position: center; background-repeat: no-repeat;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 30%;\"></div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 40%;\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pstiNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 30%;\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-lg-3\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 80px;\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
