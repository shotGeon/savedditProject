/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-22 07:33:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.guest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class confirmation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1639443128000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/covid_compass/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("function confirmationClose(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar check = confirm(\"확인서발급을 종료하시겠습니까?\");\r\n");
      out.write("\t\r\n");
      out.write("\tif(check){\r\n");
      out.write("\t\twindow.close();\r\n");
      out.write("\t}\r\n");
      out.write("\telse{\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction savePDF() {\r\n");
      out.write("\t\t\t//저장 영역 div id\r\n");
      out.write("\t\t\thtml2canvas($('#pdfArea')[0], {\r\n");
      out.write("\t\t\t\t//logging : true,\t\t// 디버그 목적 로그\r\n");
      out.write("\t\t\t\t//proxy: \"html2canvasproxy.php\",\r\n");
      out.write("\t\t\t\tallowTaint : true, // cross-origin allow \r\n");
      out.write("\t\t\t\tuseCORS : true, // CORS 사용한 서버로부터 이미지 로드할 것인지 여부\r\n");
      out.write("\t\t\t\tscale : 2\r\n");
      out.write("\t\t\t// 기본 96dpi에서 해상도를 두 배로 증가\r\n");
      out.write("\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\t\t.then(\r\n");
      out.write("\t\t\t\t\t\t\tfunction(canvas) {\r\n");
      out.write("\t\t\t\t\t\t\t\t// 캔버스를 이미지로 변환\r\n");
      out.write("\t\t\t\t\t\t\t\tvar imgData = canvas.toDataURL('image/png');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar imgWidth = 190; // 이미지 가로 길이(mm) / A4 기준 210mm\r\n");
      out.write("\t\t\t\t\t\t\t\tvar pageHeight = imgWidth * 1.414; // 출력 페이지 세로 길이 계산 A4 기준\r\n");
      out.write("\t\t\t\t\t\t\t\tvar imgHeight = canvas.height * imgWidth\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t/ canvas.width;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar heightLeft = imgHeight;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar margin = 10; // 출력 페이지 여백설정\r\n");
      out.write("\t\t\t\t\t\t\t\tvar doc = new jsPDF('p', 'mm');\r\n");
      out.write("\t\t\t\t\t\t\t\tvar position = 10;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t// 첫 페이지 출력\r\n");
      out.write("\t\t\t\t\t\t\t\tdoc.addImage(imgData, 'PNG', margin, position,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\timgWidth, imgHeight);\r\n");
      out.write("\t\t\t\t\t\t\t\theightLeft -= pageHeight;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t// 한 페이지 이상일 경우 루프 돌면서 출력\r\n");
      out.write("\t\t\t\t\t\t\t\twhile (heightLeft >= 20) { // 35\r\n");
      out.write("\t\t\t\t\t\t\t\t\tposition = heightLeft - imgHeight;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tposition = position - 20; // -25\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdoc.addPage();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdoc.addImage(imgData, 'PNG', margin,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tposition, imgWidth, imgHeight);\r\n");
      out.write("\t\t\t\t\t\t\t\t\theightLeft -= pageHeight;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t// 파일 저장\r\n");
      out.write("\t\t\t\t\t\t\t\tdoc.save('filename.pdf');\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<div class=\"form-group row pr-3\" style=\"margin-top: 16px;\">\r\n");
      out.write("\t\t<div class=\"col-md-6\"></div>\r\n");
      out.write("\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t<button type=\"button\" onclick=\"savePDF();\"style=\"background-color: rgb(26, 79, 114); border-color: rgb(26, 79, 114);\" class=\"btn btn-block btn-primary\">확인서발급</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t<button type=\"button\"  onclick=\"confirmationClose();\" class=\"btn btn-block btn-danger\">닫기</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"pdfArea\">\r\n");
      out.write("\t\t<div style=\"border: 1px solid black; margin: 10px;\">\r\n");
      out.write("\t\t\t<div style=\"border: 2px double black; margin: 10px;\">\r\n");
      out.write("\t\t\t\t<div style=\"height: 120px;\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"card-body\" style=\"text-align: center\">\r\n");
      out.write("\t\t\t\t\t<h1>코로나19 PCR검사 음성확인서</h1>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 120px;\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-center\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t<h4 style=\"display: inline;\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>성&nbsp;&nbsp; 명</b>&nbsp;(성&nbsp; 별)&nbsp;&nbsp;:&nbsp;");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${confirmation.pstiNm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t</h4>\r\n");
      out.write("\t\t\t\t\t\t<h6 style=\"display: inline;\">(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${confirmation.gender eq 'M' ? '남' : '여' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")</h6>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t<h4>\r\n");
      out.write("\t\t\t\t\t\t\t<b>생&nbsp;&nbsp; 년 &nbsp;&nbsp;월 &nbsp;&nbsp;일 &nbsp;&nbsp;:&nbsp;&nbsp;</b>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${confirmation.bir}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 150px;\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t<h4>\r\n");
      out.write("\t\t\t\t\t\t\t<b>검&nbsp;&nbsp;&nbsp;&nbsp;사&nbsp;&nbsp;&nbsp;&nbsp;일&nbsp;&nbsp;&nbsp;&nbsp;자&nbsp;&nbsp;:&nbsp;&nbsp;</b>\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t<h4>\r\n");
      out.write("\t\t\t\t\t\t\t<b>검&nbsp;&nbsp;&nbsp;&nbsp;체&nbsp;&nbsp;&nbsp;&nbsp;종&nbsp;&nbsp;&nbsp;&nbsp;류&nbsp;&nbsp;:&nbsp;&nbsp;</b> 비강도말\r\n");
      out.write("\t\t\t\t\t\t</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t<h4>\r\n");
      out.write("\t\t\t\t\t\t\t<b>검&nbsp;&nbsp;&nbsp;&nbsp;사&nbsp;&nbsp;&nbsp;&nbsp;방&nbsp;&nbsp;&nbsp;&nbsp;법&nbsp;&nbsp;:&nbsp;&nbsp;</b> PCR\r\n");
      out.write("\t\t\t\t\t\t</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t<h4>\r\n");
      out.write("\t\t\t\t\t\t\t<b>검&nbsp;&nbsp;&nbsp;&nbsp;사&nbsp;&nbsp;&nbsp;&nbsp;결&nbsp;&nbsp;&nbsp;&nbsp;과&nbsp;&nbsp;:&nbsp;&nbsp;</b> \r\n");
      out.write("\t\t\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${confirmation.pstvYn eq 'N' ? '음성' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 150px;\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-center\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t<h4>상기 인에 대한 검사결과를 위와 같이 확인합니다.</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 150px;\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-left\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-12 ml-3\">\r\n");
      out.write("\t\t\t\t\t\t<span>*&nbsp;보건소에서&nbsp;&nbsp;발급된&nbsp;&nbsp;음성확인서는&nbsp;&nbsp;「감염병예방법」&nbsp;&nbsp;제4조에&nbsp;&nbsp;따라 &nbsp;&nbsp;코로나19&nbsp;&nbsp;발생과&nbsp;&nbsp;유행방지와&nbsp;&nbsp;방역을&nbsp;&nbsp;위한&nbsp;&nbsp;국내용&nbsp;&nbsp;공익<br> &nbsp;&nbsp;목적으로&nbsp;&nbsp;한정됩니다.\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 120px;\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"row text-right\" style=\"height: 100px;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-8 align-self-center\">\r\n");
      out.write("\t\t\t\t\t\t<h4 style=\"display: inline;\">검&nbsp;&nbsp;&nbsp;&nbsp;사&nbsp;&nbsp;&nbsp;&nbsp;기&nbsp;&nbsp;&nbsp;&nbsp;관&nbsp;&nbsp;:&nbsp;&nbsp; 대덕보건소</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 100px;height: 100px; background-image: url(");
      out.print(request.getContextPath());
      out.write("/resources/image/직인.JPG);background-size: cover;\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"height: 80px;\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/guest/confirmation.jsp(113,7) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${confirmation.resYmd}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/guest/confirmation.jsp(113,7) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy년  MM월  dd일");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }
}
