/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-01-08 02:03:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.ltctr;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<head></head>\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<body> \r\n");
      out.write("\t<div class=\"card\">\r\n");
      out.write("\t\t<div class=\"card-header\" style=\"background-color: #5b6f90;\">\r\n");
      out.write("\t\t\t<h3 class=\"card-title\" style=\"color: white;\">통계</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"card-tools \">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"collapse\">\r\n");
      out.write("\t\t\t\t\t<i class=\"fas fa-minus\" style=\"color: white;\"></i>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\">\r\n");
      out.write("\t\t\t\t\t<i class=\"fas fa-times\" style=\"color: white;\"></i>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"card-body \" style=\"display: block;\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"chart\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"chartjs-size-monitor \">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"chartjs-size-monitor-expand\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"chartjs-size-monitor-shrink\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<canvas id=\"barChart\" style=\"min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 644px;\" width=\"644\" height=\"250\" class=\"chartjs-render-monitor\"></canvas>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"chart-responsive\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"chartjs-size-monitor\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"chartjs-size-monitor-expand\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"chartjs-size-monitor-shrink\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<canvas id=\"pieChart\" style=\"min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 644px;\" width=\"644\" height=\"250\" class=\"chartjs-render-monitor\"></canvas>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- ./chart-responsive -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- /.row -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- /.card-body -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div class=\"#\">\r\n");
      out.write("\t\t\t<div class=\"card-header border-transparent\" style=\"background-color: #5b6f90;\">\r\n");
      out.write("\t\t\t\t<h3 class=\"card-title\" style=\"color: white;\">피검자 대기목록</h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- /.card-header -->\r\n");
      out.write("\t\t\t<div class=\"#\">\r\n");
      out.write("\t\t\t\t<div class=\"table-responsive\">\r\n");
      out.write("\t\t\t\t\t<table class=\"table m-0\">\r\n");
      out.write("\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>고유번호</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>나이</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>Status</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>Popularity</th>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=\"#\">피검자1</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보1</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보2</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보3</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보4</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=\"#\">피검자2</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보1</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보2</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보3</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보4</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=\"#\">피검자3</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보1</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보2</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보3</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보4</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=\"#\">피검자4</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보1</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보2</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보3</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보4</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=\"#\">피검자5</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보1</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보2</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보3</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>정보4</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- /.table-responsive -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- /.card-body -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar context = document.getElementById('barChart').getContext('2d');\r\n");
      out.write("\t\tvar myChart = new Chart(context, {\r\n");
      out.write("\t\t\ttype : 'bar', // 차트의 형태\r\n");
      out.write("\t\t\tdata : { // 차트에 들어갈 데이터\r\n");
      out.write("\t\t\t\tlabels : [\r\n");
      out.write("\t\t\t\t//x 축\r\n");
      out.write("\t\t\t\t'1일', '2일', '3일', '4일', '5일', '6일', '7일' ],\r\n");
      out.write("\t\t\t\tdatasets : [\r\n");
      out.write("\t\t\t\t\t\t{ //데이터\r\n");
      out.write("\t\t\t\t\t\t\tlabel : 'test1', //차트 제목\r\n");
      out.write("\t\t\t\t\t\t\tfill : false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지\r\n");
      out.write("\t\t\t\t\t\t\tdata : [ 21, 19, 25, 20, 51, 26, 25 //x축 label에 대응되는 데이터 값\r\n");
      out.write("\t\t\t\t\t\t\t],\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor : [\r\n");
      out.write("\t\t\t\t\t\t\t//색상\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(255, 159, 64, 0.2)' ],\r\n");
      out.write("\t\t\t\t\t\t\tborderColor : [\r\n");
      out.write("\t\t\t\t\t\t\t//경계선 색상\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(255, 206, 86, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(75, 192, 192, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(153, 102, 255, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'rgba(255, 159, 64, 1)' ],\r\n");
      out.write("\t\t\t\t\t\t\tborderWidth : 1\r\n");
      out.write("\t\t\t\t\t\t//경계선 굵기\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\tlabel : 'test2',\r\n");
      out.write("\t\t\t\t\t\t\tfill : false,\r\n");
      out.write("\t\t\t\t\t\t\tdata : [ 8, 34, 12, 24 ],\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor : 'rgb(157, 109, 12)',\r\n");
      out.write("\t\t\t\t\t\t\tborderColor : 'rgb(157, 109, 12)'\r\n");
      out.write("\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\toptions : {\r\n");
      out.write("\t\t\t\tscales : {\r\n");
      out.write("\t\t\t\t\tyAxes : [ {\r\n");
      out.write("\t\t\t\t\t\tticks : {\r\n");
      out.write("\t\t\t\t\t\t\tbeginAtZero : true\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tconst data = {\r\n");
      out.write("\t\t\tlabels : [ 'Red', 'Orange', 'Yellow', 'Green', 'Blue' ],\r\n");
      out.write("\t\t\tdatasets : [ {\r\n");
      out.write("\t\t\t\tlabel : 'Dataset 1',\r\n");
      out.write("\t\t\t\tdata : [ 21, 19, 25, 20, 51 ], //x축 label에 대응되는 데이터 값\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tbackgroundColor : [\r\n");
      out.write("\t\t\t\t//색상\r\n");
      out.write("\t\t\t\t'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(153, 102, 255, 1)' ],\r\n");
      out.write("\t\t\t\tborderColor : [\r\n");
      out.write("\t\t\t\t//경계선 색상\r\n");
      out.write("\t\t\t\t'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(153, 102, 255, 1)', ],\r\n");
      out.write("\t\t\t\tborderWidth : 1\r\n");
      out.write("\t\t\t} ]\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tvar context1 = document.getElementById('pieChart').getContext('2d');\r\n");
      out.write("\t\tvar pieChart = new Chart(context1, {\r\n");
      out.write("\t\t\ttype : 'pie',\r\n");
      out.write("\t\t\tdata : data,\r\n");
      out.write("\t\t\toptions : {\r\n");
      out.write("\t\t\t\tresponsive : true,\r\n");
      out.write("\t\t\t\tplugins : {\r\n");
      out.write("\t\t\t\t\tlegend : {\r\n");
      out.write("\t\t\t\t\t\tposition : 'right',\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\t\t\ttext : 'Chart.js Pie Chart'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
