/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-22 07:33:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.guest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testResultCheckForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<head></head>\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"card card-info\">\r\n");
      out.write("\t\r\n");
      out.write("              <div class=\"card-header row m-0\" style=\"background: #1a4f72; justify-content: space-between;\">\r\n");
      out.write("                <h3 class=\"card-title\" id=\"checkTitle\"></h3>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-success btn-sm\" onclick=\"inputData('1');\" style=\"margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;\">양성</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-success btn-sm\" onclick=\"inputData('2');\" style=\"margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;\">음성</button>\r\n");
      out.write("              </div>\r\n");
      out.write("              <!-- /.card-header -->\r\n");
      out.write("              <!-- form start -->\r\n");
      out.write("              <form class=\"form-horizontal\" name=\"testResultCheck\" id=\"testResultCheck\">\r\n");
      out.write("              \t<input type=\"hidden\" id=\"backPage\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${backPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("                <div class=\"card-body pb-0 pt-0\">\r\n");
      out.write("                  <div class=\"form-group row \">\r\n");
      out.write("                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">성명</label>\r\n");
      out.write("                    <div class=\"col-sm-9\">\r\n");
      out.write("                      <input type=\"text\" class=\"form-control\" id=\"pstiNm\" name=\"pstiNm\" placeholder=\"홍길동\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"form-group row\">\r\n");
      out.write("                    <label for=\"inputPassword3\" class=\"col-sm-3 col-form-label pt-0\">주민등록 번호</label>\r\n");
      out.write("                    <div class=\"col-sm-4\">\r\n");
      out.write("                      <input type=\"text\" class=\"form-control\" name=\"rrn\" id=\"rrn\" maxlength=\"14\" oninput=\"rrnAutoHyphen(this)\" placeholder=\"960123-1234567\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- /.card-body -->\r\n");
      out.write("                <div class=\"card-footer\">\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-danger float-right \" onclick=\"openClose();\" >취소</button>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-info float-right mr-2\" onclick=\"lookUp();\" id=\"lookup_go\"style=\"background: #1a4f72; border-color: #1a4f72;\">조회</button>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-info float-right mr-2\" onclick=\"confirmation_go();\" id=\"confirmation\"style=\"background: #1a4f72; border-color: #1a4f72;display: none;\">확인서발급</button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- /.card-footer -->\r\n");
      out.write("              </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("<script>\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar backPage = $('#backPage').val();\r\n");
      out.write("\tif(backPage==\"lookup\"){\r\n");
      out.write("\t\t$('#checkTitle').html(\"검사결과조회\");\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$('#checkTitle').html(\"확인서발급\");\r\n");
      out.write("\t\t$('#lookup_go').css('display', 'none');\r\n");
      out.write("\t\t$('#confirmation').css('display', 'block');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function openClose(){\r\n");
      out.write("\tvar check = confirm(\"취소 하시겠습니까?\");\r\n");
      out.write("\r\n");
      out.write("      if(check) window.close();\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("function lookUp(){\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar rrn = $('#rrn').val();\r\n");
      out.write("\t\tvar nm = $('#pstiNm').val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar rrn_length = $('#rrn').val().length;\r\n");
      out.write("\t\tif(rrn_length < 14){\r\n");
      out.write("\t\t\talert(\"주민/외국인등록번호를 잘못 입력하셨습니다.\")\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif(!(rrn && nm)){\r\n");
      out.write("\t\t\talert(\"이름과 주민등록번호를 모두 작성해 주세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t var check = confirm(\"조회 하시겠습니까?\");\r\n");
      out.write("\r\n");
      out.write("\t     if(check) {\r\n");
      out.write("\t\t    \t \r\n");
      out.write("\t\t     window.close();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t var gsWin = window.open('about:blank','testResultCheck','width=580,height=480');\r\n");
      out.write("\t\t     var frm = document.getElementById('testResultCheck');\r\n");
      out.write("\t\t     frm.action = 'testResultCheck';\r\n");
      out.write("\t\t     frm.target =\"testResultCheck\";\r\n");
      out.write("\t\t     frm.method =\"post\";\r\n");
      out.write("\t\t     frm.submit();\r\n");
      out.write("\t     }else{\r\n");
      out.write("\t    \t return false;\r\n");
      out.write("\t     }\r\n");
      out.write("\t\t\r\n");
      out.write("\t//OpenWindow('testResultCheck', '확진결과', 580,440)\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function confirmation_go(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar rrn = $('#rrn').val();\r\n");
      out.write("\tvar nm = $('#pstiNm').val();\r\n");
      out.write("\tvar frm = document.getElementById('testResultCheck');\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar rrn_length = $('#rrn').val().length;\r\n");
      out.write("\tif(rrn_length < 14){\r\n");
      out.write("\t\talert(\"주민/외국인등록번호를 잘못 입력하셨습니다.\")\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif(!(rrn && nm)){\r\n");
      out.write("\t\talert(\"이름과 주민등록번호를 모두 작성해 주세요.\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("  \t $.ajax({\r\n");
      out.write("  \t\t    url : '");
      out.print(request.getContextPath());
      out.write("/guest/confirmationCheck',\r\n");
      out.write("  \t\t    type : 'get',\r\n");
      out.write("  \t\t    dataType : 'json',\r\n");
      out.write("  \t\t    data : {\"pstiNm\": nm, \"rrn\":rrn},\r\n");
      out.write("  \t\t    success : function(result){\r\n");
      out.write("  \t\t    \t \r\n");
      out.write("  \t\t    \tif(result > 0){\r\n");
      out.write("  \t\t    \t\tvar check = confirm(\"확인서를 발급하시겠습니까?\");\r\n");
      out.write("\r\n");
      out.write("  \t  \t\t         if(check) {\r\n");
      out.write("  \t  \t\t        \t window.close();\r\n");
      out.write("  \t  \t\t    \t\t var gsWin = window.open('about:blank','confirmation','width=950,height=900');\r\n");
      out.write("  \t  \t\t    \t     frm.action = 'confirmation';\r\n");
      out.write("  \t  \t\t    \t     frm.target =\"confirmation\";\r\n");
      out.write("  \t  \t\t    \t     frm.method =\"post\";\r\n");
      out.write("  \t  \t\t    \t     frm.submit();\r\n");
      out.write("  \t  \t\t         }else{\r\n");
      out.write("  \t  \t\t      \t return;\r\n");
      out.write("  \t  \t\t       }\r\n");
      out.write("  \t\t    \t}else{\r\n");
      out.write("  \t\t    \t\tvar check = confirm(\"일치하는 음성 정보가없습니다.\\n확인서 발급을 종료하시겠습니까?\");\r\n");
      out.write("  \t\t    \t\t\r\n");
      out.write("  \t\t    \t\tif(check){\r\n");
      out.write("  \t\t    \t\t\twindow.close();\r\n");
      out.write("  \t\t    \t\t}\r\n");
      out.write("  \t\t    \t\telse{\r\n");
      out.write("  \t\t    \t\t\treturn;\r\n");
      out.write("  \t\t    \t\t}\r\n");
      out.write("  \t\t    \t}\r\n");
      out.write("  \t\t    \r\n");
      out.write("  \t\t    },\r\n");
      out.write("  \t\t    error : function(error){\r\n");
      out.write("  \t\t      alert('error' + error.status);\r\n");
      out.write("  \t\t    }\r\n");
      out.write("  \t\t  })\r\n");
      out.write("    \r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("const rrnAutoHyphen = (target) =>{\r\n");
      out.write("\ttarget.value = target.value.replace(/[^0-9]/, '').replace(/^(\\d{6})(\\d{1,7})$/,`$1-$2`);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function inputData(type){\r\n");
      out.write("\t\r\n");
      out.write("\tif(type == '1'){\r\n");
      out.write("\t\t$('#pstiNm').val('노선옥');\r\n");
      out.write("\t\t$('#rrn').val('960604-1800508');\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\tif(type == '2'){\r\n");
      out.write("\t\t$('#pstiNm').val('복은샘');\r\n");
      out.write("\t\t$('#rrn').val('650408-2805425');\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</script>            \r\n");
      out.write("            \r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
