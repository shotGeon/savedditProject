/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2022-02-12 06:18:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cookieTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/xhtml+xml;charset=utf-8\" />\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    //쿠키설정    \r\n");
      out.write("    function setCookie( name, value, expiredays ) {\r\n");
      out.write("    var todayDate = new Date();\r\n");
      out.write("    todayDate.setDate( todayDate.getDate() + expiredays );\r\n");
      out.write("    document.cookie = name + '=' + escape( value ) + '; path=/; expires=' + todayDate.toGMTString() + ';'\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //쿠키 불러오기\r\n");
      out.write("    function getCookie(name) \r\n");
      out.write("    { \r\n");
      out.write("        var obj = name + \"=\"; \r\n");
      out.write("        var x = 0; \r\n");
      out.write("        while ( x <= document.cookie.length ) \r\n");
      out.write("        { \r\n");
      out.write("            var y = (x+obj.length); \r\n");
      out.write("            if ( document.cookie.substring( x, y ) == obj ) \r\n");
      out.write("            { \r\n");
      out.write("                if ((endOfCookie=document.cookie.indexOf( \";\", y )) == -1 ) \r\n");
      out.write("                    endOfCookie = document.cookie.length;\r\n");
      out.write("                return unescape( document.cookie.substring( y, endOfCookie ) ); \r\n");
      out.write("            } \r\n");
      out.write("            x = document.cookie.indexOf( \" \", x ) + 1; \r\n");
      out.write("            \r\n");
      out.write("            if ( x == 0 ) break; \r\n");
      out.write("        } \r\n");
      out.write("        return \"\"; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //닫기 버튼 클릭시\r\n");
      out.write("    function closeWin(key)\r\n");
      out.write("    {\r\n");
      out.write("        if($(\"#todaycloseyn\").prop(\"checked\"))\r\n");
      out.write("        {\r\n");
      out.write("            setCookie('divpop'+key, 'Y' , 1 );\r\n");
      out.write("        }\r\n");
      out.write("        $(\"#divpop\"+key+\"\").hide();\r\n");
      out.write("    }\r\n");
      out.write("  \r\n");
      out.write("    $(function(){    \r\n");
      out.write("        if(getCookie(\"divpop1\") !=\"Y\"){\r\n");
      out.write("            $(\"#divpop1\").show();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("  .divpop {\r\n");
      out.write("      position: absolute; z-index:999; top:50px; left:50px;\r\n");
      out.write("      width:350px; height:500px; border:1px solid black;background-color:yellow;display:none;\r\n");
      out.write("  }\r\n");
      out.write("  .title_area {font-weight:bold;text-align:center;width:100%}\r\n");
      out.write("  .button_area {position:absolute;bottom:0;left:10px;} \r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <form name=\"notice_form\">\r\n");
      out.write("      <div id=\"divpop1\" class=\"divpop\">    \r\n");
      out.write("          <div class=\"title_area\">레이어 팝업 오늘 하루 이창을 열지 않음</div>\r\n");
      out.write("           <div class=\"button_area\">\r\n");
      out.write("               <input type='checkbox' name='chkbox' id='todaycloseyn' value='Y'>오늘 하루 이 창을 열지 않음    \r\n");
      out.write("               <a href='#' onclick=\"javascript:closeWin(1);\"><B>[닫기]</B></a>\r\n");
      out.write("           </div>\r\n");
      out.write("      </div>\r\n");
      out.write("  </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
