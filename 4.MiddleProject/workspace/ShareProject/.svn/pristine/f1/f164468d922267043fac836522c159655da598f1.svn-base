
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%
	session.setAttribute("userName", "HONG KILDONG"); // 세션정보 가져오기 테스트용...
%>
<!DOCTYPE html>
<html>
<head>
<title>Web Socket 예제</title>
</head>

<style>
* {
	margin : 0px;
	padding : 0px;
}
body {
	background-color: #a6a1a7;
}

#container {
	margin : 30px;
	background-color: white;
	width : 670px;
	height: 600px;
	display : flex;
	justify-content: center;
	align-items: center;
	border-radius: 10px;
}
header {
	height : 60px;
	display : flex;
	justify-content: center;
	align-items: center;
}

#user {
	display : inline-block;
	height: 40px;
	margin-top: 15px;
}

aside {
	width: 260px;
	height: 550px;
	background-color: #164d78;
	font-size: 15px;
	vertical-align: top;
	border-radius: 10px 0px 0px 10px;
	display: flex;
	flex-direction: column;
}
#idList {
	margin : 20px;
	list-style: none;
	background-color: rgb(255,255,255, 0.5);
	height: 500px;
	border-radius: 10px;
}
#idList li {
	margin : 15px;
}
main {
	width: 355px;
	height: 550px;
	display: inline-block;
	font-size: 15px;
	vertical-align: top;
	background-color: #dee2e4;
	border-radius: 0px 10px 10px 0px;
}
#messageTextArea {
	resize: none;
	margin: 10px;
	border : none;
	border-radius: 10px;
	padding : 15px;
}
#textMessage {
	display: inline-block;
	width : 255px;
	height: 50px;
	margin-left : 10px;
	border : none;
}
#sendBtn {
	width : 70px;
	height: 50px;
	border : none;
}
#sendBtn:hover {
	background-color : gray;
}
footer {
	display: flex;
	justify-content: center;
	flex-direction: column;
}
#disconBtn {
	width: 300px;
	margin-top: 12px;
	position: relative;
	left : 25px;
	border : none;
}
#disconBtn:hover {
	background-color : gray;
}
</style>

<body>
	<div id="container">
		<aside>
			<header>
				<!-- 유저 명을 입력하는 텍스트 박스 -->
				<input id="user" type="text" placeholder="대화명을 입력하세요.">
			</header>
			<ul id="idList">
				<li>접속 중인 클라이언트</li>
			</ul>
		</aside>
		
		<main>
			<textarea id="messageTextArea" rows="20" cols="32"></textarea>
				<!-- 송신 메시지를 작성하는 텍스트 박스 -->
				<input id="textMessage" type="text">
				<!-- 메세지를 송신하는 버튼 -->
			<input id="sendBtn" onclick="sendMessage()" value="Send" type="button"> 
			<footer>
			<!-- WebSocket 접속 종료하는 버튼 -->
			<input id="disconBtn" onclick="disconnect()" value="Disconnect" type="button">
			</footer>
		</main>
	</div>
			



	<!-- 콘솔 메시지의 역할을 하는 로그 텍스트 에리어.(수신 메시지도 표시한다.) -->
	<script type="text/javascript">
    // 「WebSocketEx」는 프로젝트 명
    // 「broadsocket」는 호스트 명
    // WebSocket 오브젝트 생성 (자동으로 접속 시작한다. - onopen 함수 호출)
    var webSocket = new WebSocket("ws://192.168.43.50/ShareProject/websocket");
    // 콘솔 텍스트 에리어 오브젝트
    var messageTextArea = document.getElementById("messageTextArea");
    // WebSocket 서버와 접속이 되면 호출되는 함수
    webSocket.onopen = function(message) {
      // 콘솔 텍스트에 메시지를 출력한다.
      messageTextArea.value += "Server에 연결됨.\n";
    };
    
    
    // WebSocket 서버와 접속이 끊기면 호출되는 함수
    webSocket.onclose = function(message) {
      // 콘솔 텍스트에 메시지를 출력한다.
      messageTextArea.value += "접속 끊김.\n";
    };
    
    
    // WebSocket 서버와 통신 중에 에러가 발생하면 요청되는 함수
    webSocket.onerror = function(message) {
      // 콘솔 텍스트에 메시지를 출력한다.
      messageTextArea.value += "에러발생..\n";
    };
    
    
    /// WebSocket 서버로 부터 메시지가 오면 호출되는 함수
    webSocket.onmessage = function(message) {
      // 콘솔 텍스트에 메시지를 출력한다.
      messageTextArea.value += message.data + "\n";
    };
    
    
    // Send 버튼을 누르면 호출되는 함수
    function sendMessage() {
      // 유저명 텍스트 박스 오브젝트를 취득
      var user = document.getElementById("user");
      // 송신 메시지를 작성하는 텍스트 박스 오브젝트를 취득
      var message = document.getElementById("textMessage");
      // 콘솔 텍스트에 메시지를 출력한다.
      messageTextArea.value += user.value + "(나) ▶ " + message.value + "\n";
      // WebSocket 서버에 메시지를 전송(형식 「{{유저명}}메시지」)
      webSocket.send("[" + user.value + "] " + message.value);
      // 송신 메시지를 작성한 텍스트 박스를 초기화한다.
      message.value = "";
    }
    
    
    // Disconnect 버튼을 누르면 호출되는 함수
    function disconnect() {
      // WebSocket 접속 해제
      webSocket.close();
    }
    

	// 간지나게 엔터키 누르면 메시지 날림
	var input = document.getElementById("textMessage");
	input.addEventListener("keyup", function(event) {
		if (event.keyCode === 13) {
			sendMessage();
		}
	});
	
	</script>
</body>
</html>


